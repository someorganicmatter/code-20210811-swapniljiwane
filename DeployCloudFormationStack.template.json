{
  "Resources": {
    "sqsqueuedemoxyzdeve197777622": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "sqsqueue-demoxyz-dev-e1"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/sqsqueue-demoxyz-dev-e1/Resource"
      }
    },
    "sqsqueuedemoxyzdeve1Policy3F15E452": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "SQS:*",
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "sqsqueuedemoxyzdeve197777622",
                  "Arn"
                ]
              },
              "Sid": "snstosqsaccess"
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "sqsqueuedemoxyzdeve197777622"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/sqsqueue-demoxyz-dev-e1/Policy/Resource"
      }
    },
    "sourcesnstopicdemoxyzdeve155505939": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "sourcesnstopic-demoxyz-dev-e1",
        "TopicName": "sourcesnstopic-demoxyz-dev-e1"
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/sourcesnstopic-demoxyz-dev-e1/Resource"
      }
    },
    "snsnotificationdemoxyzdeve1D220CBAA": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "sourcesnstopicdemoxyzdeve155505939"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "sqsqueuedemoxyzdeve197777622",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/snsnotification-demoxyz-dev-e1/Resource"
      }
    },
    "s3bucketdemoxyzdeve1A54D8713": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "s3bucket-demoxyz-dev-e1",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/s3bucket-demoxyz-dev-e1/Resource"
      }
    },
    "s3bucketdemoxyzdeve1NotificationsFBFE8532": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "s3bucketdemoxyzdeve1A54D8713"
        },
        "NotificationConfiguration": {
          "TopicConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "TopicArn": {
                "Ref": "emailsnstopicdemoxyzdeve193B926E5"
              }
            }
          ]
        }
      },
      "DependsOn": [
        "emailsnstopicdemoxyzdeve1Policy781E7145",
        "emailsnstopicdemoxyzdeve193B926E5"
      ],
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/s3bucket-demoxyz-dev-e1/Notifications/Resource"
      }
    },
    "s3bucketdemoxyzdeve1Policy82535EBC": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "s3bucketdemoxyzdeve1A54D8713"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "s3bucketdemoxyzdeve1A54D8713",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "s3bucketdemoxyzdeve1A54D8713",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/s3bucket-demoxyz-dev-e1/Policy/Resource"
      }
    },
    "s3bucketdemoxyzdeve1AutoDeleteObjectsCustomResource817D3E85": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "s3bucketdemoxyzdeve1A54D8713"
        }
      },
      "DependsOn": [
        "s3bucketdemoxyzdeve1Policy82535EBC"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/s3bucket-demoxyz-dev-e1/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "s3bucketdemoxyzdeve1A54D8713"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler"
      }
    },
    "iamroledemoxyzdeve1833EADAB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:PutObject",
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "s3bucketdemoxyzdeve1A54D8713",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "s3bucketdemoxyzdeve1A54D8713",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  ],
                  "Sid": "lambdas3writeaccess"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "s3access"
          }
        ],
        "RoleName": "iamrole-demoxyz-dev-e1"
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/iamrole-demoxyz-dev-e1/Resource"
      }
    },
    "iamroledemoxyzdeve1DefaultPolicy79C241F4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
                "sqs:ReceiveMessage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "sqsqueuedemoxyzdeve197777622",
                  "Arn"
                ]
              },
              "Sid": "sqslambdapoller"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "iamroledemoxyzdeve1DefaultPolicy79C241F4",
        "Roles": [
          {
            "Ref": "iamroledemoxyzdeve1833EADAB"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/iamrole-demoxyz-dev-e1/DefaultPolicy/Resource"
      }
    },
    "lambdademoxyzdeve14E15F3FD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469fS3Bucket387D861B"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469fS3VersionKey03DF0766"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469fS3VersionKey03DF0766"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "iamroledemoxyzdeve1833EADAB",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "BUCKETNAME": {
              "Ref": "s3bucketdemoxyzdeve1A54D8713"
            }
          }
        },
        "FunctionName": "lambda-demoxyz-dev-e1",
        "Handler": "lambda-handler.handler",
        "Runtime": "python3.7"
      },
      "DependsOn": [
        "iamroledemoxyzdeve1DefaultPolicy79C241F4",
        "iamroledemoxyzdeve1833EADAB"
      ],
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/lambda-demoxyz-dev-e1/Resource",
        "aws:asset:path": "asset.85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469f",
        "aws:asset:property": "Code"
      }
    },
    "lambdademoxyzdeve1sqslambdatrigger64C74C2A": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "lambdademoxyzdeve14E15F3FD"
        },
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "sqsqueuedemoxyzdeve197777622",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/lambda-demoxyz-dev-e1/sqs-lambda-trigger/Resource"
      }
    },
    "emailsnstopicdemoxyzdeve193B926E5": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "emailsnstopic-demoxyz-dev-e1",
        "TopicName": "emailsnstopic-demoxyz-dev-e1"
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/emailsnstopic-demoxyz-dev-e1/Resource"
      }
    },
    "emailsnstopicdemoxyzdeve1Policy781E7145": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Condition": {
                "ArnLike": {
                  "aws:SourceArn": {
                    "Fn::GetAtt": [
                      "s3bucketdemoxyzdeve1A54D8713",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Resource": {
                "Ref": "emailsnstopicdemoxyzdeve193B926E5"
              },
              "Sid": "0"
            }
          ],
          "Version": "2012-10-17"
        },
        "Topics": [
          {
            "Ref": "emailsnstopicdemoxyzdeve193B926E5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/emailsnstopic-demoxyz-dev-e1/Policy/Resource"
      }
    },
    "snsnotificationdemoxyzdeve1emailF13B6772": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "email",
        "TopicArn": {
          "Ref": "emailsnstopicdemoxyzdeve193B926E5"
        },
        "Endpoint": "swapniljiwane96@gmail.com"
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/snsnotification-demoxyz-dev-e1-email/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "exports.handler = (event, context) => {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports, import/no-extraneous-dependencies\n    const s3 = new (require('aws-sdk').S3)();\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const https = require('https');\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const url = require('url');\n    log(JSON.stringify(event, undefined, 2));\n    const props = event.ResourceProperties;\n    if (event.RequestType === 'Delete') {\n        props.NotificationConfiguration = {}; // this is how you clean out notifications\n    }\n    const req = {\n        Bucket: props.BucketName,\n        NotificationConfiguration: props.NotificationConfiguration,\n    };\n    return s3.putBucketNotificationConfiguration(req, (err, data) => {\n        log({ err, data });\n        if (err) {\n            return submitResponse('FAILED', err.message + `\\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);\n        }\n        else {\n            return submitResponse('SUCCESS');\n        }\n    });\n    function log(obj) {\n        console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);\n    }\n    // eslint-disable-next-line max-len\n    // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule\n    // to allow sending an error message as a reason.\n    function submitResponse(responseStatus, reason) {\n        const responseBody = JSON.stringify({\n            Status: responseStatus,\n            Reason: reason || 'See the details in CloudWatch Log Stream: ' + context.logStreamName,\n            PhysicalResourceId: event.PhysicalResourceId || event.LogicalResourceId,\n            StackId: event.StackId,\n            RequestId: event.RequestId,\n            LogicalResourceId: event.LogicalResourceId,\n            NoEcho: false,\n        });\n        log({ responseBody });\n        const parsedUrl = url.parse(event.ResponseURL);\n        const options = {\n            hostname: parsedUrl.hostname,\n            port: 443,\n            path: parsedUrl.path,\n            method: 'PUT',\n            headers: {\n                'content-type': '',\n                'content-length': responseBody.length,\n            },\n        };\n        const request = https.request(options, (r) => {\n            log({ statusCode: r.statusCode, statusMessage: r.statusMessage });\n            context.done();\n        });\n        request.on('error', (error) => {\n            log({ sendError: error });\n            context.done();\n        });\n        request.write(responseBody);\n        request.end();\n    }\n};"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300
      },
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
      ],
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAE3VRTVPDIBD9Ld7JVqcHpzc1ozdnYuIfoITWNQEiC3U6DP9dIG1Tx/HC7tuPx+NxB5t7uL154N9UiX5YBWGshNA5LgZWG03OeuFYvdOtJOOtkKz25Iz6BzbWHLCXlj0SSZdo9qj3eb3hlivpUmfZ3Ol0Q48OjY4sKwj0RRDevPSlOyflbMyI4ngpzjAy0mn+3UwocmtOOr8lYXHKtLn6C5eRhewKJrI1hCcvBlnee8rmsGxc48iQKwitGYvcEpfJ88zI1bbnEF68FmdNl/z5ILXrih+vfJpOZv2tZnUVz54SFGtjZM3RfRi9WsMm/eAnIVbWa4dKQjvHH1v3SMXdAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "Code20210811SwapniljiwaneStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3BucketBF7A7F3F": {
      "Type": "String",
      "Description": "S3 bucket for asset \"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\""
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392S3VersionKeyFAF93626": {
      "Type": "String",
      "Description": "S3 key for asset version \"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\""
    },
    "AssetParameters4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392ArtifactHashE56CD69A": {
      "Type": "String",
      "Description": "Artifact hash for asset \"4cd61014b71160e8c66fe167e43710d5ba068b80b134e9bd84508cf9238b2392\""
    },
    "AssetParameters85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469fS3Bucket387D861B": {
      "Type": "String",
      "Description": "S3 bucket for asset \"85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469f\""
    },
    "AssetParameters85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469fS3VersionKey03DF0766": {
      "Type": "String",
      "Description": "S3 key for asset version \"85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469f\""
    },
    "AssetParameters85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469fArtifactHash9D702CC0": {
      "Type": "String",
      "Description": "Artifact hash for asset \"85012b9ae71b771fc1e565596aa64a9ee00581a5d09b20dd4ecbc0158a4e469f\""
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}